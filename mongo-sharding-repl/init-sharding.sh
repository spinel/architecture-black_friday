#!/bin/bash

echo "üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —à–∞—Ä–¥–∏—Ä–æ–≤–∞–Ω–Ω–æ–π MongoDB..."

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 30

# –®–∞–≥ 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Config Server Replica Set
echo "üìã –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Config Server..."
docker compose exec -T config1 mongosh --port 27017 --quiet <<EOF
rs.initiate({
  _id: 'configReplSet',
  configsvr: true,
  members: [
    { _id: 0, host: 'config1:27017' }
  ]
})
EOF

# –®–∞–≥ 2: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Shard 1 Replica Set
echo "üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Shard 1..."
docker compose exec -T shard1 mongosh --port 27018 --quiet <<EOF
rs.initiate({
  _id: 'shard1ReplSet',
  members: [
    { _id: 0, host: 'shard1:27018' }
  ]
})
EOF

# –®–∞–≥ 3: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Shard 2 Replica Set
echo "üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Shard 2..."
docker compose exec -T shard2 mongosh --port 27019 --quiet <<EOF
rs.initiate({
  _id: 'shard2ReplSet',
  members: [
    { _id: 0, host: 'shard2:27019' }
  ]
})
EOF

# –ñ–¥–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ replica sets
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ replica sets..."
sleep 30

# –®–∞–≥ 4: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —à–∞—Ä–¥–æ–≤ –≤ –∫–ª–∞—Å—Ç–µ—Ä —á–µ—Ä–µ–∑ mongos
echo "üîó –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —à–∞—Ä–¥–æ–≤ –≤ –∫–ª–∞—Å—Ç–µ—Ä..."
docker compose exec -T mongos mongosh --port 27017 --quiet <<EOF
sh.addShard('shard1ReplSet/shard1:27018')
sh.addShard('shard2ReplSet/shard2:27019')
EOF

# –®–∞–≥ 5: –í–∫–ª—é—á–µ–Ω–∏–µ —à–∞—Ä–¥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "üìä –í–∫–ª—é—á–µ–Ω–∏–µ —à–∞—Ä–¥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
docker compose exec -T mongos mongosh --port 27017 --quiet <<EOF
use somedb
sh.enableSharding('somedb')
EOF

# –®–∞–≥ 6: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–ª—é—á–∞ —à–∞—Ä–¥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏
echo "üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–ª—é—á–∞ —à–∞—Ä–¥–∏—Ä–æ–≤–∞–Ω–∏—è..."
docker compose exec -T mongos mongosh --port 27017 --quiet <<EOF
use somedb
sh.shardCollection('somedb.helloDoc', { '_id': 'hashed' })
EOF

# –®–∞–≥ 7: –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
echo "üìù –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏..."
docker compose exec -T mongos mongosh --port 27017 --quiet <<EOF
use somedb
for(var i = 0; i < 1000; i++) {
  db.helloDoc.insertOne({
    age: i, 
    name: 'user' + i,
    email: 'user' + i + '@example.com',
    created_at: new Date()
  })
}
EOF

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —à–∞—Ä–¥–∏—Ä–æ–≤–∞–Ω–∏—è
echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —à–∞—Ä–¥–∏—Ä–æ–≤–∞–Ω–∏—è..."
docker compose exec -T mongos mongosh --port 27017 --quiet <<EOF
sh.status()
EOF

echo "üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —à–∞—Ä–¥–∏—Ä–æ–≤–∞–Ω–Ω–æ–π MongoDB –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "üìä –°—Ç–∞—Ç—É—Å –∫–ª–∞—Å—Ç–µ—Ä–∞ –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8080" 